// Auto-generated by generate_serialise_for_types.py
// Reads

DgError DgStreamReadInt8(DgStream *context, int8_t* data) {
	/**
	 * Read an Int8 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Int8 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadUInt8(DgStream *context, uint8_t* data) {
	/**
	 * Read an UInt8 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return UInt8 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadInt16(DgStream *context, int16_t* data) {
	/**
	 * Read an Int16 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Int16 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadUInt16(DgStream *context, uint16_t* data) {
	/**
	 * Read an UInt16 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return UInt16 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadInt32(DgStream *context, int32_t* data) {
	/**
	 * Read an Int32 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Int32 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadUInt32(DgStream *context, uint32_t* data) {
	/**
	 * Read an UInt32 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return UInt32 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadInt64(DgStream *context, int64_t* data) {
	/**
	 * Read an Int64 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Int64 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadUInt64(DgStream *context, uint64_t* data) {
	/**
	 * Read an UInt64 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return UInt64 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadFloat32(DgStream *context, float* data) {
	/**
	 * Read an Float32 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Float32 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}


DgError DgStreamReadFloat64(DgStream *context, double* data) {
	/**
	 * Read an Float64 from the stream, with a fallback value
	 * 
	 * @param context Stream object
	 * @param data Where to put the result
	 * @return Float64 Error code
	 */
	
	return DgStreamRead(context, sizeof *data, data);
}

// Writes
DgError DgStreamWriteInt8(DgStream *context, int8_t data) {
	/**
	 * Write a Int8 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Int8 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteUInt8(DgStream *context, uint8_t data) {
	/**
	 * Write a UInt8 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The UInt8 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteInt16(DgStream *context, int16_t data) {
	/**
	 * Write a Int16 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Int16 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteUInt16(DgStream *context, uint16_t data) {
	/**
	 * Write a UInt16 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The UInt16 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteInt32(DgStream *context, int32_t data) {
	/**
	 * Write a Int32 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Int32 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteUInt32(DgStream *context, uint32_t data) {
	/**
	 * Write a UInt32 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The UInt32 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteInt64(DgStream *context, int64_t data) {
	/**
	 * Write a Int64 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Int64 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteUInt64(DgStream *context, uint64_t data) {
	/**
	 * Write a UInt64 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The UInt64 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteFloat32(DgStream *context, float data) {
	/**
	 * Write a Float32 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Float32 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}


DgError DgStreamWriteFloat64(DgStream *context, double data) {
	/**
	 * Write a Float64 to a stream.
	 * 
	 * @param context Stream object
	 * @param data The Float64 to write
	 * @return Error code
	 */
	
	return DgStreamWrite(context, sizeof data, &data);
}

